# Example Nginx configuration for the API Gateway
# Place this file in ./config/nginx/nginx.conf

events {
    worker_connections 1024;
}

http {
    upstream csharp_backend {
        server csharp-api:80;
        # Uncomment below lines to enable load balancing across multiple instances
        # server csharp-api-2:80;
        # server csharp-api-3:80;
    }

    upstream java_backend {
        server java-api:8080;
        # Uncomment below lines to enable load balancing across multiple instances
        # server java-api-2:8080;
        # server java-api-3:8080;
    }

    upstream nodejs_backend {
        server nodejs-api:3000;
        # Uncomment below lines to enable load balancing across multiple instances
        # server nodejs-api-2:3000;
        # server nodejs-api-3:3000;
    }

    upstream python_backend {
        server python-api:8000;
        # Uncomment below lines to enable load balancing across multiple instances
        # server python-api-2:8000;
        # server python-api-3:8000;
    }

    server {
        listen 80;

        # Basic access and error logs
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        # Default handler for root
        location / {
            return 200 'System Design Playground is running!\n';
            add_header Content-Type text/plain;
        }

        # Route to C# API
        location /csharp/ {
            proxy_pass http://csharp_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route to Java API
        location /java/ {
            proxy_pass http://java_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route to Node.js API
        location /nodejs/ {
            proxy_pass http://nodejs_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route to Python API
        location /python/ {
            proxy_pass http://python_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check endpoint
        location /health {
            return 200 'OK';
            add_header Content-Type text/plain;
        }

        # Simple rate limiting example - uncomment to enable
        # limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
        
        # location /api/ {
        #     limit_req zone=api_limit burst=20 nodelay;
        #     proxy_pass http://backend_servers/;
        # }
    }
}
